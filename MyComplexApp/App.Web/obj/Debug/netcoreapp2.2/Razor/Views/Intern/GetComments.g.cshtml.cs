#pragma checksum "D:\Git\Internship\MyComplexApp\App.Web\Views\Intern\GetComments.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "96a0c5e70a0f73d82edfed095c45c084ec819ff5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Intern_GetComments), @"mvc.1.0.view", @"/Views/Intern/GetComments.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Intern/GetComments.cshtml", typeof(AspNetCore.Views_Intern_GetComments))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\Git\Internship\MyComplexApp\App.Web\Views\_ViewImports.cshtml"
using App.Web;

#line default
#line hidden
#line 2 "D:\Git\Internship\MyComplexApp\App.Web\Views\_ViewImports.cshtml"
using App.Web.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"96a0c5e70a0f73d82edfed095c45c084ec819ff5", @"/Views/Intern/GetComments.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"54c602c57965ce5caca06038002963a0a362a30e", @"/Views/_ViewImports.cshtml")]
    public class Views_Intern_GetComments : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<App.Web.Models.GeneralUser.CurrentUserCommsViewModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(61, 420, true);
            WriteLiteral(@"<div class=""col-md-9 col-xs-7 content-div"">
    <div class=""row content-input-div"">
        <input class=""form-control"" id=""myComment"" />
        <button class=""btn btn-primary"" id=""submitComment"">Add Comment</button>
    </div>
    <div class=""row content-comment-div"">
        <div class=""form-group col-12"">
            <p>Comments</p>
            <hr />
            <div class=""col-12"" id=""allcomments"">

");
            EndContext();
#line 13 "D:\Git\Internship\MyComplexApp\App.Web\Views\Intern\GetComments.cshtml"
                 foreach (var item in Model.Comments)
                {

#line default
#line hidden
            BeginContext(555, 23, true);
            WriteLiteral("                    <b>");
            EndContext();
            BeginContext(579, 10, false);
#line 15 "D:\Git\Internship\MyComplexApp\App.Web\Views\Intern\GetComments.cshtml"
                  Write(item.EMail);

#line default
#line hidden
            EndContext();
            BeginContext(589, 19, true);
            WriteLiteral("</b><span>:</span> ");
            EndContext();
            BeginContext(609, 12, false);
#line 15 "D:\Git\Internship\MyComplexApp\App.Web\Views\Intern\GetComments.cshtml"
                                                Write(item.Comment);

#line default
#line hidden
            EndContext();
            BeginContext(621, 39, true);
            WriteLiteral(" <small class=\"text-muted text-right\">(");
            EndContext();
            BeginContext(661, 16, false);
#line 15 "D:\Git\Internship\MyComplexApp\App.Web\Views\Intern\GetComments.cshtml"
                                                                                                    Write(item.DateComment);

#line default
#line hidden
            EndContext();
            BeginContext(677, 17, true);
            WriteLiteral(")</small><br />\r\n");
            EndContext();
#line 16 "D:\Git\Internship\MyComplexApp\App.Web\Views\Intern\GetComments.cshtml"
                }

#line default
#line hidden
            BeginContext(713, 549, true);
            WriteLiteral(@"            </div>
            <div>
                <button id=""MoreComments"" class=""btn btn-outline-primary btn-sm"">Show more comments...</button>
            </div>
        </div>
    </div>
</div>
<script>
    $(""#submitComment"").click(function () {
        $.ajax({
            url: ""/Intern/SubmitComment"",
            type: ""POST"",
            data: ({ comment: $(""#myComment"").val(), themeId: $(""#theme"").val() }),
            datatype: ""html"",
            success: function () {
                $(""#allcomments"").prepend(""<b>");
            EndContext();
            BeginContext(1263, 22, false);
#line 32 "D:\Git\Internship\MyComplexApp\App.Web\Views\Intern\GetComments.cshtml"
                                         Write(Model.CurrentUserEmail);

#line default
#line hidden
            EndContext();
            BeginContext(1285, 86, true);
            WriteLiteral("</b> : \" + $(\"#myComment\").\r\n                    val() + \" <small class=\'text-muted\'>(");
            EndContext();
            BeginContext(1372, 23, false);
#line 33 "D:\Git\Internship\MyComplexApp\App.Web\Views\Intern\GetComments.cshtml"
                                                    Write(DateTime.Now.ToString());

#line default
#line hidden
            EndContext();
            BeginContext(1395, 1056, true);
            WriteLiteral(@")</span><br/>"");
                $(""#myComment"").val("""");
            },
            error: function () {
                alert(""Choose a theme!"");
            }
        });
    });
    var pageNr = 0;

    $(""#MoreComments"").click(function () {
        pageNr++;
        //if(pageNr != -1)
        $.ajax({
            url: ""/Intern/GetMoreComments"",
            type: ""GET"",
            data: ({ themeId: $(""#theme"").val() , pageNr: pageNr}),
            datatype: ""application/json"",
            success: function (data) {
                if (data.length < 10) {
                    $(""#MoreComments"").hide();
                    //$(""#allcomments"").append(""<br/><span class='text-danger text-sm'>Don't exist more comments</span>"");
                }
                $.each(data, function (i, item) {
                    $('#allcomments').append(""<b>"" + item.EMail+""</b> : "" + item.Comment + "" <small class='text-muted'>("" + item.DateComment+"")</span><br/>"");
                });
             }");
            WriteLiteral("\n        });\r\n    });\r\n</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<App.Web.Models.GeneralUser.CurrentUserCommsViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
