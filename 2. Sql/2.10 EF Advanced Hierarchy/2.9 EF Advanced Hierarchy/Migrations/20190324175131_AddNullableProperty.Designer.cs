// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _2._9_EF_Advanced_Hierarchy;

namespace _2._9_EF_Advanced_Hierarchy.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20190324175131_AddNullableProperty")]
    partial class AddNullableProperty
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("_2._9_EF_Advanced_Hierarchy.Tables.Exam", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("smalldatetime");

                    b.Property<long>("ModuleId");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId")
                        .IsUnique();

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("_2._9_EF_Advanced_Hierarchy.Tables.ExamMark", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasMaxLength(200);

                    b.Property<long>("ExamId");

                    b.Property<long>("InternId");

                    b.Property<int>("Mark");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.HasIndex("InternId");

                    b.ToTable("ExamMarks");
                });

            modelBuilder.Entity("_2._9_EF_Advanced_Hierarchy.Tables.Group", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(30);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("_2._9_EF_Advanced_Hierarchy.Tables.Module", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("_2._9_EF_Advanced_Hierarchy.Tables.Theme", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("MenthroId")
                        .HasColumnName("MenthorId");

                    b.Property<long>("ModuleId");

                    b.Property<string>("Name")
                        .HasMaxLength(20);

                    b.Property<string>("Source")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("TimeOfTheme")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.HasIndex("MenthroId");

                    b.HasIndex("ModuleId");

                    b.ToTable("Themes");
                });

            modelBuilder.Entity("_2._9_EF_Advanced_Hierarchy.Tables.ThemeMark", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasMaxLength(200);

                    b.Property<long>("InternId");

                    b.Property<int>("Mark");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<long>("ThemeId");

                    b.HasKey("Id");

                    b.HasIndex("InternId");

                    b.HasIndex("ThemeId");

                    b.ToTable("ThemeMarks");
                });

            modelBuilder.Entity("_2._9_EF_Advanced_Hierarchy.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .HasMaxLength(20);

                    b.Property<string>("LastName")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("_2._9_EF_Advanced_Hierarchy.UserIntern", b =>
                {
                    b.HasBaseType("_2._9_EF_Advanced_Hierarchy.User");

                    b.Property<long>("GroupId");

                    b.Property<string>("Speciality")
                        .HasMaxLength(20);

                    b.HasIndex("GroupId");

                    b.HasDiscriminator().HasValue("UserIntern");
                });

            modelBuilder.Entity("_2._9_EF_Advanced_Hierarchy.UserMenthor", b =>
                {
                    b.HasBaseType("_2._9_EF_Advanced_Hierarchy.User");

                    b.Property<int?>("Experience");

                    b.Property<string>("Job")
                        .HasMaxLength(20);

                    b.Property<string>("Level")
                        .HasMaxLength(30);

                    b.HasDiscriminator().HasValue("UserMenthor");
                });

            modelBuilder.Entity("_2._9_EF_Advanced_Hierarchy.Tables.Exam", b =>
                {
                    b.HasOne("_2._9_EF_Advanced_Hierarchy.Tables.Module", "Module")
                        .WithOne("Exam")
                        .HasForeignKey("_2._9_EF_Advanced_Hierarchy.Tables.Exam", "ModuleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("_2._9_EF_Advanced_Hierarchy.Tables.ExamMark", b =>
                {
                    b.HasOne("_2._9_EF_Advanced_Hierarchy.Tables.Exam", "Exam")
                        .WithMany("ExamMarks")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("_2._9_EF_Advanced_Hierarchy.UserIntern", "Intern")
                        .WithMany("ExamMarks")
                        .HasForeignKey("InternId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("_2._9_EF_Advanced_Hierarchy.Tables.Theme", b =>
                {
                    b.HasOne("_2._9_EF_Advanced_Hierarchy.UserMenthor", "Menthor")
                        .WithMany("Themes")
                        .HasForeignKey("MenthroId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("_2._9_EF_Advanced_Hierarchy.Tables.Module", "Modulep")
                        .WithMany("Themes")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("_2._9_EF_Advanced_Hierarchy.Tables.ThemeMark", b =>
                {
                    b.HasOne("_2._9_EF_Advanced_Hierarchy.UserIntern", "Intern")
                        .WithMany("ThemeMarks")
                        .HasForeignKey("InternId")
                        .HasConstraintName("FK_Mark_Intern")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("_2._9_EF_Advanced_Hierarchy.Tables.Theme", "theme")
                        .WithMany("ThemeMarks")
                        .HasForeignKey("ThemeId")
                        .HasConstraintName("FK_Mark_Theme")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("_2._9_EF_Advanced_Hierarchy.UserIntern", b =>
                {
                    b.HasOne("_2._9_EF_Advanced_Hierarchy.Tables.Group", "Group")
                        .WithMany("Interns")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
