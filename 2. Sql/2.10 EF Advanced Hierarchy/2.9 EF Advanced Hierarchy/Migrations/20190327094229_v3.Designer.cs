// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _2._9_EF_Advanced_Hierarchy;

namespace _2._9_EF_Advanced_Hierarchy.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20190327094229_v3")]
    partial class v3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("_2._9_EF_Advanced_Hierarchy.Tables.Exam", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("smalldatetime");

                    b.Property<long>("ModuleId");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId")
                        .IsUnique();

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("_2._9_EF_Advanced_Hierarchy.Tables.ExamMark", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasMaxLength(200);

                    b.Property<long>("ExamId");

                    b.Property<long>("InternId");

                    b.Property<int>("Mark");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.HasIndex("InternId");

                    b.ToTable("ExamMarks");
                });

            modelBuilder.Entity("_2._9_EF_Advanced_Hierarchy.Tables.Group", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(30);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Interns123",
                            StartDate = new DateTime(2019, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            Name = "interns234",
                            StartDate = new DateTime(2019, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("_2._9_EF_Advanced_Hierarchy.Tables.Module", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Modules");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DateStart = new DateTime(2019, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "C#"
                        },
                        new
                        {
                            Id = 2L,
                            DateStart = new DateTime(2019, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "SQL AND EF CORE"
                        },
                        new
                        {
                            Id = 3L,
                            DateStart = new DateTime(2019, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "WEB"
                        });
                });

            modelBuilder.Entity("_2._9_EF_Advanced_Hierarchy.Tables.Theme", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("MenthorId")
                        .HasColumnName("MenthorId");

                    b.Property<long>("ModuleId");

                    b.Property<string>("Name")
                        .HasMaxLength(20);

                    b.Property<string>("Source")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("TimeOfTheme")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.HasIndex("MenthorId");

                    b.HasIndex("ModuleId");

                    b.ToTable("Themes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            MenthorId = 1L,
                            ModuleId = 1L,
                            Name = "Creational Pattern",
                            Source = "S:\\Internship\\C#",
                            TimeOfTheme = new DateTime(2019, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            MenthorId = 1L,
                            ModuleId = 2L,
                            Name = "SQL SELECT",
                            Source = "S:\\Internship\\SQL",
                            TimeOfTheme = new DateTime(2019, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3L,
                            MenthorId = 2L,
                            ModuleId = 2L,
                            Name = "EF Core Mapping",
                            Source = "S:\\Internship\\SQL",
                            TimeOfTheme = new DateTime(2019, 3, 16, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4L,
                            MenthorId = 2L,
                            ModuleId = 3L,
                            Name = "JS",
                            Source = "S:\\Internship\\WEB",
                            TimeOfTheme = new DateTime(2019, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("_2._9_EF_Advanced_Hierarchy.Tables.ThemeMark", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasMaxLength(200);

                    b.Property<long>("InternId");

                    b.Property<int>("Mark");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<long>("ThemeId");

                    b.HasKey("Id");

                    b.HasIndex("InternId");

                    b.HasIndex("ThemeId");

                    b.ToTable("ThemeMarks");
                });

            modelBuilder.Entity("_2._9_EF_Advanced_Hierarchy.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("EMail")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("NumberPhone")
                        .HasMaxLength(15);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("_2._9_EF_Advanced_Hierarchy.UserIntern", b =>
                {
                    b.HasBaseType("_2._9_EF_Advanced_Hierarchy.User");

                    b.Property<long>("GroupId");

                    b.HasIndex("GroupId");

                    b.HasDiscriminator().HasValue("UserIntern");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DateOfBirth = new DateTime(1999, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "aurel@mail.ru",
                            FirstName = "Aurel",
                            LastName = "Starciuc",
                            Login = "aurel12345",
                            NumberPhone = "+37367620932",
                            Password = "12345",
                            GroupId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            DateOfBirth = new DateTime(1997, 3, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "cristia@mail.ru",
                            FirstName = "Cristi",
                            LastName = "Anghelenici",
                            Login = "cristi12345",
                            NumberPhone = "++3732167321",
                            Password = "54321",
                            GroupId = 1L
                        });
                });

            modelBuilder.Entity("_2._9_EF_Advanced_Hierarchy.UserMenthor", b =>
                {
                    b.HasBaseType("_2._9_EF_Advanced_Hierarchy.User");

                    b.HasDiscriminator().HasValue("UserMenthor");

                    b.HasData(
                        new
                        {
                            Id = 4L,
                            DateOfBirth = new DateTime(1994, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alexandr@mail.ru",
                            FirstName = "Alexandr4",
                            LastName = "Racovschi4",
                            Login = "alexandr1633",
                            NumberPhone = "+37336218321",
                            Password = "asd1236"
                        });
                });

            modelBuilder.Entity("_2._9_EF_Advanced_Hierarchy.Tables.Exam", b =>
                {
                    b.HasOne("_2._9_EF_Advanced_Hierarchy.Tables.Module", "Module")
                        .WithOne("Exam")
                        .HasForeignKey("_2._9_EF_Advanced_Hierarchy.Tables.Exam", "ModuleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("_2._9_EF_Advanced_Hierarchy.Tables.ExamMark", b =>
                {
                    b.HasOne("_2._9_EF_Advanced_Hierarchy.Tables.Exam", "Exam")
                        .WithMany("ExamMarks")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("_2._9_EF_Advanced_Hierarchy.UserIntern", "Intern")
                        .WithMany("ExamMarks")
                        .HasForeignKey("InternId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("_2._9_EF_Advanced_Hierarchy.Tables.Theme", b =>
                {
                    b.HasOne("_2._9_EF_Advanced_Hierarchy.UserMenthor", "Menthor")
                        .WithMany("Themes")
                        .HasForeignKey("MenthorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("_2._9_EF_Advanced_Hierarchy.Tables.Module", "Modulep")
                        .WithMany("Themes")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("_2._9_EF_Advanced_Hierarchy.Tables.ThemeMark", b =>
                {
                    b.HasOne("_2._9_EF_Advanced_Hierarchy.UserIntern", "Intern")
                        .WithMany("ThemeMarks")
                        .HasForeignKey("InternId")
                        .HasConstraintName("FK_Mark_Intern")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("_2._9_EF_Advanced_Hierarchy.Tables.Theme", "theme")
                        .WithMany("ThemeMarks")
                        .HasForeignKey("ThemeId")
                        .HasConstraintName("FK_Mark_Theme")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("_2._9_EF_Advanced_Hierarchy.UserIntern", b =>
                {
                    b.HasOne("_2._9_EF_Advanced_Hierarchy.Tables.Group", "Group")
                        .WithMany("Interns")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
