// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TESTDB;

namespace TESTDB.Migrations
{
    [DbContext(typeof(TESTDBContext))]
    [Migration("20190325104549_WithData2")]
    partial class WithData2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TESTDB.ExamMarks", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ExamenId");

                    b.Property<long>("InternId");

                    b.Property<double?>("Mark");

                    b.HasKey("Id");

                    b.HasIndex("ExamenId");

                    b.HasIndex("InternId");

                    b.ToTable("ExamMarks");
                });

            modelBuilder.Entity("TESTDB.Exams", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateOfExamen")
                        .HasColumnType("smalldatetime");

                    b.Property<long>("ModuleId");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId")
                        .IsUnique()
                        .HasName("UQ__Exams__2B7477A6ED80BB8B");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("TESTDB.Group", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("GROUPS");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Interns123",
                            StartDate = new DateTime(2019, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TESTDB.Modules", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.ToTable("Modules");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "C#",
                            StartDate = new DateTime(2019, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            Name = "SQL AND EF CORE",
                            StartDate = new DateTime(2019, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3L,
                            Name = "WEB",
                            StartDate = new DateTime(2019, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TESTDB.Tables.MenthorProject", b =>
                {
                    b.Property<long>("MenthorId");

                    b.Property<long>("ProjectId");

                    b.HasKey("MenthorId", "ProjectId");

                    b.HasIndex("ProjectId");

                    b.ToTable("MenthorsProjects");
                });

            modelBuilder.Entity("TESTDB.Tables.Project", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DurationDays");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("TESTDB.ThemeMarks", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasMaxLength(50);

                    b.Property<long>("InternId");

                    b.Property<double>("Mark");

                    b.Property<long>("ThemeId");

                    b.HasKey("Id");

                    b.HasIndex("InternId");

                    b.HasIndex("ThemeId");

                    b.ToTable("ThemeMarks");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Comment = "Good",
                            InternId = 1L,
                            Mark = 9.0,
                            ThemeId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Comment = "No Comment",
                            InternId = 1L,
                            Mark = 1.0,
                            ThemeId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            Comment = "The Best",
                            InternId = 2L,
                            Mark = 10.0,
                            ThemeId = 2L
                        },
                        new
                        {
                            Id = 4L,
                            InternId = 1L,
                            Mark = 8.0,
                            ThemeId = 4L
                        });
                });

            modelBuilder.Entity("TESTDB.Themes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("MenthorId");

                    b.Property<long>("ModuleId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("Source")
                        .HasMaxLength(40);

                    b.Property<DateTime?>("TimeOfTheme")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.HasIndex("MenthorId");

                    b.HasIndex("ModuleId");

                    b.ToTable("Themes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            MenthorId = 1L,
                            ModuleId = 1L,
                            Name = "Creational Pattern",
                            Source = "S:\\Internship\\C#",
                            TimeOfTheme = new DateTime(2019, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            MenthorId = 1L,
                            ModuleId = 2L,
                            Name = "SQL SELECT",
                            Source = "S:\\Internship\\SQL",
                            TimeOfTheme = new DateTime(2019, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3L,
                            MenthorId = 2L,
                            ModuleId = 2L,
                            Name = "EF Core Mapping",
                            Source = "S:\\Internship\\SQL",
                            TimeOfTheme = new DateTime(2019, 3, 16, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4L,
                            MenthorId = 2L,
                            ModuleId = 3L,
                            Name = "JS",
                            Source = "S:\\Internship\\WEB",
                            TimeOfTheme = new DateTime(2019, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TESTDB.Users", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("EMail")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("NumberPhone")
                        .HasMaxLength(15);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DateOfBirth = new DateTime(1999, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "aurel@mail.ru",
                            FirstName = "Aurel",
                            LastName = "Starciuc",
                            Login = "aurel12345",
                            NumberPhone = "+37367620932",
                            Password = "12345"
                        },
                        new
                        {
                            Id = 2L,
                            DateOfBirth = new DateTime(1997, 3, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "cristia@mail.ru",
                            FirstName = "Cristi",
                            LastName = "Anghelenici",
                            Login = "cristi12345",
                            NumberPhone = "++3732167321",
                            Password = "54321"
                        },
                        new
                        {
                            Id = 3L,
                            DateOfBirth = new DateTime(1994, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alexandr@mail.ru",
                            FirstName = "Alexandr",
                            LastName = "Racovschi",
                            Login = "alexandr1633",
                            NumberPhone = "+37336218321",
                            Password = "asd1236"
                        },
                        new
                        {
                            Id = 4L,
                            DateOfBirth = new DateTime(1984, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "iong@mail.ru",
                            FirstName = "Ion",
                            LastName = "Gandrabura",
                            Login = "ion79345",
                            NumberPhone = "+373954035",
                            Password = "asdqwe123"
                        });
                });

            modelBuilder.Entity("TESTDB.UsersIntern", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("GroupId");

                    b.Property<long?>("MenthorId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("MenthorId")
                        .IsUnique()
                        .HasName("UQ__Interns__262694BBC14690F6")
                        .HasFilter("[MenthorId] IS NOT NULL");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasName("UQ__Interns__1788CC4D9B185DF7");

                    b.ToTable("Interns");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            GroupId = 1L,
                            MenthorId = 2L,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            GroupId = 1L,
                            MenthorId = 1L,
                            UserId = 2L
                        });
                });

            modelBuilder.Entity("TESTDB.UsersMenthor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasName("UQ__Menthors__1788CC4D01D0DA72");

                    b.ToTable("Menthors");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            UserId = 3L
                        },
                        new
                        {
                            Id = 2L,
                            UserId = 4L
                        });
                });

            modelBuilder.Entity("TESTDB.ExamMarks", b =>
                {
                    b.HasOne("TESTDB.Exams", "Examen")
                        .WithMany("ExamMarks")
                        .HasForeignKey("ExamenId")
                        .HasConstraintName("FK__ExamMarks__Exame__74643BF9");

                    b.HasOne("TESTDB.UsersIntern", "Intern")
                        .WithMany("ExamMarks")
                        .HasForeignKey("InternId")
                        .HasConstraintName("FK__ExamMarks__Inter__75586032");
                });

            modelBuilder.Entity("TESTDB.Exams", b =>
                {
                    b.HasOne("TESTDB.Modules", "Module")
                        .WithOne("Exams")
                        .HasForeignKey("TESTDB.Exams", "ModuleId")
                        .HasConstraintName("FK__Exams__ModuleId__7187CF4E");
                });

            modelBuilder.Entity("TESTDB.Tables.MenthorProject", b =>
                {
                    b.HasOne("TESTDB.UsersMenthor", "Menthor")
                        .WithMany("MenthorProjects")
                        .HasForeignKey("MenthorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TESTDB.Tables.Project", "Project")
                        .WithMany("MenthorProjects")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TESTDB.ThemeMarks", b =>
                {
                    b.HasOne("TESTDB.UsersIntern", "Intern")
                        .WithMany("ThemeMarks")
                        .HasForeignKey("InternId")
                        .HasConstraintName("FK__ThemeMark__Inter__6CC31A31");

                    b.HasOne("TESTDB.Themes", "Theme")
                        .WithMany("ThemeMarks")
                        .HasForeignKey("ThemeId")
                        .HasConstraintName("FK__ThemeMark__Theme__6BCEF5F8");
                });

            modelBuilder.Entity("TESTDB.Themes", b =>
                {
                    b.HasOne("TESTDB.UsersMenthor", "Menthor")
                        .WithMany("Themes")
                        .HasForeignKey("MenthorId")
                        .HasConstraintName("FK__Themes__MenthorI__67FE6514");

                    b.HasOne("TESTDB.Modules", "Module")
                        .WithMany("Themes")
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("FK__Themes__ModuleId__68F2894D");
                });

            modelBuilder.Entity("TESTDB.UsersIntern", b =>
                {
                    b.HasOne("TESTDB.Group", "Group")
                        .WithMany("Interns")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK__Interns__GroupId__61516785");

                    b.HasOne("TESTDB.UsersMenthor", "Menthor")
                        .WithOne("Interns")
                        .HasForeignKey("TESTDB.UsersIntern", "MenthorId")
                        .HasConstraintName("FK__Interns__Menthor__6339AFF7");

                    b.HasOne("TESTDB.Users", "User")
                        .WithOne("Interns")
                        .HasForeignKey("TESTDB.UsersIntern", "UserId")
                        .HasConstraintName("FK__Interns__UserId__62458BBE");
                });

            modelBuilder.Entity("TESTDB.UsersMenthor", b =>
                {
                    b.HasOne("TESTDB.Users", "User")
                        .WithOne("Menthors")
                        .HasForeignKey("TESTDB.UsersMenthor", "UserId")
                        .HasConstraintName("FK__Menthors__UserId__5AA469F6");
                });
#pragma warning restore 612, 618
        }
    }
}
